package com.hithinksoft.sbbp.web.rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/config")
public class ConfigResource {
    @Autowired
    private JdbcTemplate jdbcTemplate;

    /**
     * 列表显示
     * @param tableName
     * @param tableColumn
     * @return
     */
    @GetMapping("/{tableName}")
    public ResponseEntity<List> list(@PathVariable String tableName, @RequestParam String tableColumn) {
        List list = jdbcTemplate.queryForList("SELECT " + tableColumn + " FROM " + tableName);
        return ResponseEntity.ok(list);
    }

    /**
     * 新增
     * @param tableName
     * @param map
     * @return
     */
    @PostMapping("/{tableName}")
    @Transactional
    public ResponseEntity create(@PathVariable String tableName, @RequestBody Map map) {
        List<String> keys = new ArrayList(map.keySet());
        List values = new ArrayList(map.values());
        String arr[] = new String[keys.size()];
        Arrays.fill(arr, "?");
        String sql = "insert into " + tableName + "(" + String.join(",", keys) + ") values(" +
            String.join(",", Arrays.asList(arr)) + ")";
        return jdbcTemplate.update(sql, values.toArray()) > 0 ? ResponseEntity.ok().build() : ResponseEntity.badRequest().build();
    }

    /**
     * 修改
     * @param tableName
     * @param id
     * @param map
     * @return
     */
    @PutMapping("/{tableName}/{id}")
    @Transactional
    public ResponseEntity update(@PathVariable String tableName, @PathVariable Long id, @RequestBody Map map) {
        List<String> keys = new ArrayList(map.keySet());
        List<String> sqlSet = keys.stream().map(k -> k + "=?").collect(Collectors.toList());
        List values = new ArrayList(map.values());
        values.add(id);
        String sql = "update " + tableName + " set " + String.join(",", sqlSet) + " where id = ?";
        return jdbcTemplate.update(sql, values.toArray()) > 0 ? ResponseEntity.ok().build() : ResponseEntity.badRequest().build();
    }

    /**
     * 删除
     * @param id
     * @param tableName
     * @return
     */
    @DeleteMapping("/{tableName}/{id}")
    @Transactional
    public ResponseEntity delete(@PathVariable String tableName, @PathVariable Long id) {
        String sql = "delete from " + tableName + " where id = ?";
        Object args[] = new Object[]{id};
        return jdbcTemplate.update(sql,args)>0 ? ResponseEntity.ok().build() : ResponseEntity.badRequest().build();
    }
}
